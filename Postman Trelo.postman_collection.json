{
	"info": {
		"_postman_id": "60ce1b45-7181-4e74-b23e-162b3d416864",
		"name": "Postman Trelo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16025976",
		"_collection_link": "https://restless-moon-544658.postman.co/workspace/workspacetest~cb7f57c0-4817-4066-8bef-392548697d09/collection/16025976-60ce1b45-7181-4e74-b23e-162b3d416864?action=share&source=collection_link&creator=16025976"
	},
	"item": [
		{
			"name": "Create new table",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"pm.test(\"Should verify status code\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"    resBody = pm.response.json();\r",
							"})\r",
							"pm.test(\"Should verify created board Name\",()=>{\r",
							"    pm.expect(resBody.name).to.eql(pm.collectionVariables.get(\"boardName\"));\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify response id\",()=>{\r",
							"    pm.expect(resBody.id.length).to.greaterThan(10);\r",
							"    pm.collectionVariables.set(\"boardID\",resBody.id)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}boards/?name={{boardName}}&key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}boards"
					],
					"path": [
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Show tables list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"pm.test(\"Should verify status code\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"    resBody = pm.response.json()\r",
							"})\r",
							"pm.test(\"should verify type of name\",()=>{\r",
							"    resBody.map(item=>{\r",
							"    pm.expect(item.name).to.be.a(\"string\")\r",
							"    })\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}members/me/boards?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}members"
					],
					"path": [
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"pm.test(\"Should verify status code\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"    resBody = pm.response.json()\r",
							"})\r",
							"pm.collectionVariables.set(\"listName\",resBody.name)\r",
							"pm.test(\"should verify list name\",()=>{\r",
							"    pm.expect(resBody.name).to.eql(pm.collectionVariables.get(\"listName\"))\r",
							"})\r",
							"pm.collectionVariables.set(\"listID\",resBody.id)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}boards/{{boardID}}/lists?name={{boardName}}&key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}boards"
					],
					"path": [
						"{{boardID}}",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get list from table",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"pm.test(\"Should verify status code\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"    resBody = pm.response.json()\r",
							"})\r",
							"pm.test(\"should verify closed value\",()=>{\r",
							"    resBody.map(item =>{\r",
							"    pm.expect(item.closed).to.eql(false)\r",
							"    })\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}boards/{{boardID}}/lists?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}boards"
					],
					"path": [
						"{{boardID}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;\r",
							"pm.test(\"Should verify status code\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"    resBody = pm.response.json()\r",
							"})\r",
							"pm.test(\"Should verify value of id list and id board\",()=>{\r",
							"    pm.expect(resBody.idList).to.eql(pm.collectionVariables.get('listID'));\r",
							"     pm.expect(resBody.idBoard).to.eql(pm.collectionVariables.get('boardID'));\r",
							"\r",
							"})\r",
							"pm.collectionVariables.set(\"cardID\",resBody.id)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}cards?key={{key}}&token={{token}}&idList={{listID}}&name={{cardName}}",
					"host": [
						"{{baseUrl}}cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "idList",
							"value": "{{listID}}"
						},
						{
							"key": "name",
							"value": "{{cardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get card from board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{baseUrl}}/cards/{{cardID}}?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards",
						"{{cardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody\r",
							"pm.test(\"Should verify status code\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"    resBody = pm.response.json()\r",
							"})\r",
							"pm.test(\"should updated name value\",()=>{\r",
							"    pm.expect(resBody.name).to.eql(pm.collectionVariables.get(\"updateCardName\"))\r",
							"\r",
							"})\r",
							"pm.test(\"should verify desc value\",()=>{\r",
							"    pm.expect(resBody.desc).to.eql(pm.collectionVariables.get(\"updateCardName\"))\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}cards/{{cardID}}?key={{key}}&token={{token}}&name={{updateCardName}}&desc={{updateCardName}}",
					"host": [
						"{{baseUrl}}cards"
					],
					"path": [
						"{{cardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{updateCardName}}"
						},
						{
							"key": "desc",
							"value": "{{updateCardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"should verify status code\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}cards/{{cardID}}?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}cards"
					],
					"path": [
						"{{cardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"should verify code status\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}boards/{{boardID}}?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}boards"
					],
					"path": [
						"{{boardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com/1/",
			"type": "string"
		},
		{
			"key": "boardName",
			"value": "Tablica z APi",
			"type": "string"
		},
		{
			"key": "boardID",
			"value": ""
		},
		{
			"key": "listName",
			"value": "Testowa lista",
			"type": "string"
		},
		{
			"key": "listID",
			"value": ""
		},
		{
			"key": "cardName",
			"value": "Nie dziala system logowania",
			"type": "string"
		},
		{
			"key": "cardID",
			"value": ""
		},
		{
			"key": "updateCardName",
			"value": "nie dziala system rejestracji\n",
			"type": "string"
		},
		{
			"key": "updateCardDesc",
			"value": "Test test ",
			"type": "string"
		}
	]
}